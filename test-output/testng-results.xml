<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Checking with valid agentId]]>
    </line>
    <line>
      <![CDATA[Checking with Invalid agentId]]>
    </line>
    <line>
      <![CDATA[Checking without providing the  agentId]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="24215" started-at="2020-06-11T07:42:05Z" finished-at="2020-06-11T07:42:30Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="24215" started-at="2020-06-11T07:42:05Z" finished-at="2020-06-11T07:42:30Z">
      <class name="CloudAutomation.AgentManager.HeartBeat">
        <test-method status="PASS" signature="getJobStatus(java.lang.String, java.lang.String)[pri:0, instance:CloudAutomation.AgentManager.HeartBeat@cc285f4]" name="getJobStatus" duration-ms="8602" started-at="2020-06-11T13:12:21Z" data-provider="getData" finished-at="2020-06-11T13:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Checking with valid agentId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[336a3152-dc71-45e1-81f1-1cf833f49644]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Checking with valid agentId]]>
            </line>
          </reporter-output>
        </test-method> <!-- getJobStatus -->
        <test-method status="FAIL" signature="getJobStatus(java.lang.String, java.lang.String)[pri:0, instance:CloudAutomation.AgentManager.HeartBeat@cc285f4]" name="getJobStatus" duration-ms="55" started-at="2020-06-11T13:12:29Z" data-provider="getData" finished-at="2020-06-11T13:12:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Checking with Invalid agentId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[336a3152-dc71-45e1-81f1-1cf833]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [400] but found [300]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [400] but found [300]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at CloudAutomation.AgentManager.HeartBeat.getJobStatus(HeartBeat.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Checking with Invalid agentId]]>
            </line>
          </reporter-output>
        </test-method> <!-- getJobStatus -->
        <test-method status="PASS" signature="getJobStatus(java.lang.String, java.lang.String)[pri:0, instance:CloudAutomation.AgentManager.HeartBeat@cc285f4]" name="getJobStatus" duration-ms="74" started-at="2020-06-11T13:12:29Z" data-provider="getData" finished-at="2020-06-11T13:12:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Checking without providing the  agentId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Checking without providing the  agentId]]>
            </line>
          </reporter-output>
        </test-method> <!-- getJobStatus -->
      </class> <!-- CloudAutomation.AgentManager.HeartBeat -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
